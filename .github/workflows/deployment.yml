name: Language Learning CI/CD Pipeline

# When push to staging branch or when create tag starting with v-*
on:
    push:
        branches:
            - staging
    create:
        tags:
            - 'v*'

jobs:
    # jobs run test and deploy to staging server
    deploy_staging:
        if: github.ref == 'refs/heads/staging'
        runs-on: ubuntu-latest # operating system our steps will run on
        # job steps
        steps:
            # Checkout the repo
            - name: Checkout
              uses: actions/checkout@v2
            # Set up Python
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: '3.12' # Python version we use in the project
            # Set environment variables
            - name: Set Environment Variables
              run: |
                  echo "DATABASE_URL=sqlite:///db.sqlite3" >> $GITHUB_ENV
                  echo "TEST_DATABASE_URL=sqlite:///test.sqlite3" >> $GITHUB_ENV
                  echo "SECRET_KEY=3?6EmUkt%79\u00a3\u00a3za)6CYwFwJw\u00a3vPgqNaZ" >> $GITHUB_ENV
                  echo "OPENAPI_KEY=13456" >> $GITHUB_ENV
            # Install dependencies
            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
            # Run tests
            - name: Run tests
              run: |
                  pytest

    deploy_production:
        if: startsWith(github.ref, 'refs/tags/v')
        runs-on: ubuntu-latest
        steps:
            # Checkout the repo
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  ref: ${{ github.ref }}
            - name: Check if tag is on main branch
              run: |
                git fetch origin main
                if ! git merge-base --is-ancestor ${{ github.sha }} origin/main; then
                  echo "This tag is not based on the main branch. Exiting..."
                  exit 1
                fi
            # Set up Python
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.12' # Python version we use in the project
            # Set environment variables
            - name: Set Environment Variables
              run: |
                  echo "DATABASE_URL=sqlite:///db.sqlite3" >> $GITHUB_ENV
                  echo "TEST_DATABASE_URL=sqlite:///test.sqlite3" >> $GITHUB_ENV
                  echo "SECRET_KEY=3?6EmUkt%79\u00a3\u00a3za)6CYwFwJw\u00a3vPgqNaZ" >> $GITHUB_ENV
                  echo "OPENAPI_KEY=13456" >> $GITHUB_ENV
            # Install dependencies
            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
            # Run tests
            - name: Run tests
              run: |
                  pytest
